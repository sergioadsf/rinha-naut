version: '3.9'
services:
  api1: # API - Instância 01
    build:
      context: .
    container_name: api1
    environment:
        DB_HOST: db-rinha
#        REDIS_HOST: rinha-dis
    depends_on:
      - db-rinha
#        condition: service_healthy
#      - rinha-dis
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    expose:
      - "8080"
#    ports:
#      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '0.7GB'
    networks:
      - rinha-net

  api2: # API - Instância 01
    build:
      context: .
    container_name: api2
    environment:
      DB_HOST: db-rinha
#      REDIS_HOST: rinha-dis
    depends_on:
      - db-rinha
#        condition: service_healthy
#      - rinha-dis
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '0.7GB'
    networks:
      - rinha-net

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.5GB'
    networks:
      - rinha-net

  db-rinha:
    image: postgres:15.4
    #    command: postgres -c shared_buffers=256MB -c synchronous_commit=off
#    command: postgres -c shared_buffers=256MB -c effective_cache_size=512MB -c max_connections=400
    command: 'postgres -c max_connections=600 -c shared_buffers=256MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #    command: postgres -c 'max_connections=400'
    #    command: postgres -c 'shared_buffers=256MB'
    expose:
      - 5432
#    ports:
#      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: rinhadb
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1.0GB'
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready" ]
#      interval: 5s
#      timeout: 5s
#      retries: 20
#      start_period: 10s
    networks:
      - rinha-net

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - '8082:8080'
#    networks:
#      - rinha-net

networks:
  rinha-net: